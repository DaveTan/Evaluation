
@{
    ViewBag.Title = "Evaluation";
}

<table class="table table-condensed">
    <thead>
        <tr>
            <th>
                <h2>@ViewBag.Title</h2>
            </th>
        </tr>
    </thead>
</table>

<form action="" method="post" enctype="multipart/form-data">
    <div class="row">
        <div class="col-sm-3">
            <h5><strong>Department</strong></h5>
        </div>
        <div class="col-sm-2">
            <h5><strong>Year</strong></h5>
        </div>
        <div class="col-sm-2">
            <h5><strong>Quarter</strong></h5>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-3">
            <select class='form-control' id='Department' name='Department'>
                @Html.Raw(ViewBag.DepartmentList)
            </select>
        </div>
        <div class="col-sm-2">
            <select id="YearView" name="Year" class="form-control">
                @Html.Raw(ViewBag.YearSelection)
            </select>
        </div>
        <div class="col-sm-2">
            <select id="QuarterView" name="Quarter" class="form-control">
                @Html.Raw(ViewBag.QuarterSelection)
            </select>
        </div>
        <div class="col-sm-1">
            <button type="submit" class="form-control" name="View" id="View" value="View">View</button>
        </div>
    </div>
</form>
<hr />
    @(Html.BootstrapTable<Evaluation.WebMVC.Models.sp_SearchQuarters_Result>(Url.Action("SearchEvaluate"), TablePaginationOption.server)
        .Apply(TableOption.showRefresh, TableOption.search)
        .Column("is Deleted")
        .Apply(ColumnOption.visible, false)
        .Column("Id")
        .Apply(ColumnOption.visible, false)
        .Column("Designation Id")
        .Apply(ColumnOption.visible, false)
        .Column("Department Id")
        .Apply(ColumnOption.visible, false)
        .Column("Action")
        .Apply(ColumnOption.formatter, "menuFormatter")
        .Apply(ColumnOption.width, 220)
        .Column("Total Score")
        .Apply(ColumnOption.formatter, "scoreFormatter")
        .Column("is Evaluated")
        .Apply(ColumnOption.visible, false)
        .Column("is Confirmed")
        .Apply(ColumnOption.visible, false)
    )

<table class="table table-condensed">
    <thead>
        <tr>
            <th>
                <h2>@Session["Name"] : @Session["Year"]</h2>
            </th>
        </tr>
    </thead>
</table>

    <div id="ConfirmEval" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Confirm</h4>
                </div>
                <form action="" method="post" enctype="multipart/form-data">
                    <div class="modal-body">
                        <input type="hidden" id="Id" name="Id" />
                        <label for="Year">Year</label>
                        <select class='form-control' id="Year" name="Year">@Html.Raw(ViewBag.YearSelection)</select>
                        <label for="Quarter">Quarter</label>
                        <select class='form-control' id="Quarter" name="Quarter">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                        </select>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-default" name="evaluate" id="evaluate" value="evaluate">Confirm</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div id="chartdiv" style="width: 100%; height: 400px;"></div>
    <script>
    var currId;
    var currData
    function scoreFormatter(value, row, index) {
        var score = parseFloat(row["TotalScore"]).toFixed(2);
        if (row["TotalScore"] != null) {
            var color;
            if (score >= 3 & score <= 4) {
                color = "green";
            }
            if (score >= 2 & score < 3) {
                color = "orange";
            }
            if (score < 2) {
                color = "red";
            }
            score = "<p style='color:{1}'><strong>{0}</strong></p>".format(score, color);
        }
        else {
            score = "<strong>For Evaluation</strong>";
        }
        return [
            score
        ].join(' ').replace(/%7B0%7D/g, row["Id"]);
    }
    function FName(value, row, index) {
        return [
            row["FirstName"]
        ].join(' ').replace(/%7B0%7D/g, row["Id"]);
    }
    function LName(value, row, index) {
        return [
            row["LastName"]
        ].join(' ').replace(/%7B0%7D/g, row["Id"]);
    }
    function menuFormatter(value, row, index) {
        var Id = row["Id"];
        var tag;
        if (parseInt(row["isConfirmed"]) == 0) {
            tag = "<a class='btn btn-link' href='@Url.Action("startEvaluate", "Home")/" + row["Id"] + "'>Evaluate</a>"
        }
        else {
            tag = "<a class='btn btn-link' href='@Url.Action("RecordView", "Home")/" + row["Id"] + "'>View Form</a>"
        }
        return [
            tag+
            "<a class='btn btn-link' href='@Url.Action("viewGraph", "Home")/" + row["Id"] + "'>View Graph</a>"
        ].join(' ').replace(/%7B0%7D/g, row["Id"]);
    }
    function evaluate(id) {
        window.location = "evaluateEmployee/" + id;
    }
    function updateId(id) {
        var HtmlElement = document.getElementById('Id');
        HtmlElement.value = id;
    }
    AmCharts.makeChart("chartdiv", {
        type: "serial",
        dataProvider: [{
            "date": "Quarter 1",
            "value": "@Session["Q1"]"
        }, {
            "date": "Quarter 2",
            "value": "@Session["Q2"]"
        }, {
            "date": "Quarter 3",
            "value": "@Session["Q3"]"
        }, {
            "date": "Quarter 4",
            "value": "@Session["Q4"]"
        }],

        dataDateFormat: "DD",
        categoryField: "date",


        categoryAxis: {
            parseDates: false,
            gridAlpha: 0.1,
            minorGridAlpha: 0.1,
            axisAlpha: 0,
            minorGridEnabled: true,
            inside: true
        },

        valueAxes: [{
            minimum: 0,
            maximum: 5,
            tickLength: 0,
            axisAlpha: 0,
            showFirstLabel: false,
            showLastLabel: false,

            guides: [{
                value: 10,
                toValue: 20,
                fillColor: "#00CC00",
                inside: true,
                fillAlpha: 0.2,
                lineAlpha: 0
            }]

        }],
        graphs: [{
            id: "g1",
            lineColor: "#00CC00",
            valueField: "value",
            dashLength: 3,
            bullet: "round",
            balloonText: "<b><span style='font-size:14px;'>[[value]]</span></b>",
            balloon: {
                drop: true
            }
        }],
        chartCursor: {
            limitToGraph: "g1",
            cursorColor: "#00CC00"
        }
    });
</script>